generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  role      Role     @default(USER)
  username  String   @unique
  password  String
}

model Organization {
  id              Int    @id @default(autoincrement())
  name            String @unique @db.VarChar(255)
  description     String
  imageUrl        String
  hacksTargetedBy Hack[]
}

model Character {
  id                Int                @id @default(autoincrement())
  name              String             @unique @db.VarChar(255)
  knownAliases      String[]
  imageUrl          String
  bio               String
  skillLevel        SkillLevel
  quotes            Quote[]
  hacksTargetedBy   Hack[]
  hackContributions HackContribution[]
}

model HackContribution {
  characterId Int
  hackId      Int
  character   Character @relation(fields: [characterId], references: [id])
  hack        Hack      @relation(fields: [hackId], references: [id])

  @@unique([characterId, hackId], name: "unique_character_hack")
}

model Hack {
  id                   Int                @id @default(autoincrement())
  title                String             @unique @db.VarChar(255)
  description          String
  targetCharacter      Character?         @relation(fields: [targetCharacterId], references: [id])
  targetCharacterId    Int?
  targetOrganization   Organization?      @relation(fields: [targetOrganizationId], references: [id])
  targetOrganizationId Int?
  contributors         HackContribution[]
}

model Quote {
  id          Int       @id @default(autoincrement())
  characterId Int
  text        String
  character   Character @relation(fields: [characterId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum TargetType {
  CHARACTER
  ORGANIZATION
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  ELITE
}
