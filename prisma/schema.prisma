generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum TargetType {
  CHARACTER
  ORGANIZATION
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  ELITE
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  role      Role     @default(USER)
  username  String   @unique
  password  String
}

model Character {
  id            Int            @id @default(autoincrement())
  name          String         @unique @db.VarChar(255)
  knownAliases  String[]
  imageUrl      String
  bio           String
  skillLevel    SkillLevel
  hacksAsHacker HackerOnHack[]
  hacksAsTarget Hack[]
  quotes        Quote[]
}

model Organization {
  id              Int    @id @default(autoincrement())
  name            String @db.VarChar(255)
  description     String
  imageUrl        String
  hacksTargetedBy Hack[]
}

model Hack {
  id                   Int            @id @default(autoincrement())
  title                String         @db.VarChar(255)
  description          String
  associatedHackers    HackerOnHack[]
  characterTargetId    Int?           @map("targetedCharacterId")
  organizationTargetId Int?           @map("targetedOrganizationId")
  targetedCharacter    Character?     @relation(fields: [characterTargetId], references: [id])
  targetedOrganization Organization?  @relation(fields: [organizationTargetId], references: [id])
}

model HackerOnHack {
  hackId      Int
  characterId Int
  hack        Hack      @relation(fields: [hackId], references: [id])
  character   Character @relation(fields: [characterId], references: [id])

  @@id([hackId, characterId])
}

model Quote {
  id          Int       @id @default(autoincrement())
  text        String
  character   Character @relation(fields: [characterId], references: [id])
  characterId Int
}
